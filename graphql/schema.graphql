"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)


    "programs: [LyMeta!]! @all"
    ly_metas: [LyMeta!]! @all
    ly_meta(id: Int! @eq): LyMeta @find

    tags: [Tag!]! @all(model: "App\\Models\\Tag")
    tags_by_type(withType: String! @scope): [Tag!] @all(model: "App\\Models\\Tag")
    tag(id: Int! @eq): Tag @find(model: "App\\Models\\Tag")
    
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Maker {
  id: ID!
  name: String!
  avatar: String
  description: String
  begin_at: String
  stop_at: String
  ly_metas: [LyMeta!]! @hasMany
}

type LyMeta {
  id: ID!
  name: String!
  code: String!
  avatar: String
  description: String
  begin_at: String
  stop_at: String
  maker: Maker! @belongsTo
  remark: String
  api_url: String!
  category: String!
  announcers: [Announcer!]! @belongsToMany
}

type Announcer {
  id: ID!
  name: String!
  avatar: String
  birthday: String
  description: String
  begin_at: String
  stop_at: String
  ly_metas: [LyMeta!]! @belongsToMany
}

type Tag @model(class: "App\\Models\\Tag") {
  id: ID!
  name: String!
  type: String
  order_column: Int
  ly_metas: [LyMeta!]
}