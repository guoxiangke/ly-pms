"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)


    ly_metas: [LyMeta!]! @all
    ly_meta(id: Int! @eq): LyMeta @find
    ly_meta_by_code(code: String! @eq): LyMeta @find
    ly_item(id: Int! @eq): LyItem @find
    ly_items(play_at: String! @eq): [LyItem!]! @paginate(defaultCount: 100)
    
    lts_metas: [LtsMeta!]! @all
    lts_meta(id: Int! @eq): LtsMeta @find
    lts_item(id: Int! @eq): LtsItem @find

    tags: [Tag!]! @all(model: "App\\Models\\Tag")
    tags_by_type(withType: String! @scope): [Tag!] @all(model: "App\\Models\\Tag")
    tag(id: Int! @eq): Tag @find(model: "App\\Models\\Tag")
    
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type LyMeta {
  id: ID!
  name: String!
  code: String!
  cover: String
  description: String
  begin_at: String
  end_at: String
  remark: String
  category: String
  announcers: [Announcer!]! @belongsToMany

  ly_items: [LyItem]! @hasMany(type: PAGINATOR, defaultCount: 31) @orderBy(column: "alias", direction: DESC)
  ly_items_with_future: [LyItem]! @hasMany(type: PAGINATOR, defaultCount: 31)
}

type LyItem {
  id: ID!
  ly_meta_id: ID!
  alias: String!
  description: String
  play_at: String
  ly_meta: LyMeta! @belongsTo
  mp3: String
  path: String
  novaMp3Path: String
}

type Announcer {
  id: ID!
  name: String!
  avatar: String
  birthday: String
  description: String
  begin_at: String
  stop_at: String
  ly_metas: [LyMeta!]! @belongsToMany
}

type Tag @model(class: "App\\Models\\Tag") {
  id: ID!
  name: String!
  type: String
  order_column: Int
  ly_metas: [LyMeta!]
}

type LtsMeta {
  id: ID!
  name: String!
  description: String
  author: String
  code: String!
  count: Int!
  index: Int!
  stop_at: String
  remark: String

  cover: String!
  category: String! 

  lts_items: [LtsItem]! @hasMany @orderBy(column: "alias", direction: ASC)
}

type LtsItem {
  id: ID!
  lts_meta_id: ID!
  alias: String!
  description: String
  play_at: String
  lts_meta: LtsMeta! @belongsTo
}